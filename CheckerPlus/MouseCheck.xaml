<Window x:Class="CheckerPlus.MouseCheck"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CheckerPlus"
        mc:Ignorable="d"
        Title="Проверка мыши" Height="330.566" Width="419.798" ResizeMode="NoResize" ShowInTaskbar="False" WindowStartupLocation="CenterScreen" WindowStyle="None" Visibility="Visible" AllowsTransparency="True" Background="{x:Null}" Foreground="{x:Null}">
    <Window.Resources>
        <!--#region FocusVisualButton-->
        <Style x:Key="BtnFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle
                    Margin="2"
                    SnapsToDevicePixels="true"
                    Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                    StrokeDashArray="1 2"
                    StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->
        <!--#region DefaultBtn-->
        <Style x:Key="MaterialDesign" TargetType="{x:Type Button}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="FocusVisualStyle" Value="{DynamicResource BtnFocusVisual}" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
            <Setter Property="RenderOptions.BitmapScalingMode" Value="Fant" />
            <Setter Property="Background" Value="{DynamicResource Static.Background.Brush}" />
            <Setter Property="Foreground" Value="{DynamicResource Static.Foreground.Brush}" />
            <Setter Property="BorderBrush" Value="{DynamicResource Static.Border.Brush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                    x:Name="Border"
                    Padding="{TemplateBinding Padding}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness=".9"
                    CornerRadius="2">
                            <ContentPresenter
                        x:Name="PART_Button"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center" />
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup Name="Common">
                                    <VisualState Name="Normal" />
                                    <VisualState Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation
                                        Storyboard.TargetName="Border"
                                        Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                        To="#FF2E2E2E" />
                                            <ColorAnimation
                                        Storyboard.TargetName="Border"
                                        Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)"
                                        To="{DynamicResource MouseOver.Border.Color}" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimation
                                        Storyboard.TargetName="Border"
                                        Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)"
                                        To="{DynamicResource Pressed.Background.Color}" />
                                            <ColorAnimation
                                        Storyboard.TargetName="Border"
                                        Storyboard.TargetProperty="(Button.BorderBrush).(SolidColorBrush.Color)"
                                        To="{DynamicResource Pressed.Border.Color}" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="00:00:00.2" To="Normal" />
                                        <VisualTransition GeneratedDuration="00:00:00.2" To="MouseOver">
                                            <VisualTransition.GeneratedEasingFunction>
                                                <ExponentialEase EasingMode="EaseOut" Exponent="10" />
                                            </VisualTransition.GeneratedEasingFunction>
                                        </VisualTransition>
                                        <VisualTransition GeneratedDuration="00:00:00.2" To="Pressed">
                                            <VisualTransition.GeneratedEasingFunction>
                                                <ExponentialEase EasingMode="EaseOut" Exponent="10" />
                                            </VisualTransition.GeneratedEasingFunction>
                                        </VisualTransition>
                                        <VisualTransition GeneratedDuration="00:00:00.2" To="Focused">
                                            <VisualTransition.GeneratedEasingFunction>
                                                <ExponentialEase EasingMode="EaseOut" Exponent="10" />
                                            </VisualTransition.GeneratedEasingFunction>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value=".6" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--#endregion-->
    </Window.Resources>    
    <Grid MouseMove="Grid_MouseMove">
        <Rectangle Fill="#FF474747" HorizontalAlignment="Left" Height="321" Margin="0,10,0,0" RadiusY="2" VerticalAlignment="Top" Width="420"/>
        <Rectangle HorizontalAlignment="Left" Height="280" VerticalAlignment="Top" Width="377" MouseLeftButtonDown="Rectangle_MouseLeftButtonDown" Fill="White" Margin="23,41,0,0" IsEnabled="False" RadiusX="2" RadiusY="2">
            <Rectangle.Effect>
                <DropShadowEffect Opacity="0.2"/>
            </Rectangle.Effect>
        </Rectangle>
        <Grid Margin="53,66,48,33">
            <Canvas x:Name="DrawingT"
                MouseLeftButtonDown="DrawingMouseLeftDown"
                MouseMove="DrawingMouseMove" OpacityMask="Black" Background="White" MouseUp="DrawingT_MouseUp" >
                <Image x:Name="enemy_image" Source="Resources/enemy.jpg" RenderOptions.BitmapScalingMode="HighQuality" Width="55" Height="121" Canvas.Left="180" Canvas.Top="53" RenderTransformOrigin="0.5,0.5">
                    <Image.OpacityMask>
                        <ImageBrush ImageSource="Resources/enemy.jpg" Stretch="Uniform"/>
                    </Image.OpacityMask>
                </Image>
            </Canvas>
        </Grid>
        <Canvas x:Name="DrawingTarget" MouseUp="DrawingT_MouseUp" MouseLeave="DrawingTarget_MouseLeave" OpacityMask="Black" Margin="56,68.6,0,0" IsEnabled="False" Width="307" Height="226" HorizontalAlignment="Left" VerticalAlignment="Top"/>
        <Border BorderThickness="3" MouseUp="DrawingT_MouseUp" MouseLeave="DrawingTarget_MouseLeave" IsHitTestVisible="False" Margin="50,63,45,31"/>
        <Rectangle HorizontalAlignment="Left" Height="18" VerticalAlignment="Top" Width="420" MouseLeftButtonDown="Rectangle_MouseLeftButtonDown" Fill="#FF272727" Stroke="#FF272727" RadiusY="2" RadiusX="2" Stretch="UniformToFill"/>
        <Button Style="{StaticResource MaterialDesign}" x:Name="Button_exit" Content="❌" HorizontalAlignment="Center" VerticalAlignment="Center" Width="17" Height="16" FontSize="10" FontFamily="Calibri" Foreground="White" Margin="399,2,4,313" BorderBrush="#00000000" Background="#00000000" Click="button2_Click" FontWeight="Bold" RenderTransformOrigin="1,0.5"/>
    </Grid>
</Window>
